//FIXME: Java type are wrong... but it now works with the breakout game...

/* ThingML Framework */

/*****************************************************************************
 * Definition of the default ThingML DataTypes
 * The size of Java primitive types is given here: http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html
 * TODO: some information is missing to properly serialize/deserialize some types, typically UInt and Int, which have the same size, but different encodings
 *****************************************************************************/
datatype Byte<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@java_type "byte"
	@js_type "byte"
	@go_type "byte";

datatype Char<1>
	@type_checker "Integer"
	@c_type "char"
	@java_type "byte"
	@js_type "byte"
	@go_type "byte";

datatype Boolean<1>
	@type_checker "Boolean"
	@c_type "bool"
	@java_type "boolean"
	@js_type "boolean"
	@go_type "bool";

datatype UInt8<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@java_type "int"
	@js_type "short"
	@go_type "uint8";

datatype Int8<1>
	@type_checker "Integer"
	@c_type "int8_t"
	@java_type "int"
	@js_type "short"
	@go_type "int8";

datatype UInt16<2>
	@type_checker "Integer"
	@c_type "uint16_t"
	@java_type "int"
	@js_type "int"
	@go_type "uint16";

datatype Int16<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@java_type "int"
	@js_type "short"
	@go_type "int16";

datatype Int32<4>
	@type_checker "Integer"
	@c_type "int32_t"
	@java_type "long"
	@js_type "int"
	@go_type "int32";

datatype UInt32<4>
	@type_checker "Integer"
	@c_type "uint32_t"
	@java_type "long"
	@js_type "long"
	@go_type "uint32";

datatype Long<4>
	@type_checker "Integer"
	@c_type "uint32_t"
	@java_type "long"
	@js_type "long"
	@go_type "uint32";

datatype Int64<8>
	@type_checker "Integer"
    @c_type "int64_t"
    @java_type "long"
    @js_type "long"
    @go_type "int64";

datatype UInt64<8>
    @type_checker "Integer"
	@c_type "uint64_t"
	@java_type "long"
	@js_type "long"
	@go_type "uint64";

datatype Integer<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@java_type "int"
	@js_type "short"
	@go_type "int16";

datatype Float<4>
	@type_checker "Real"
	@c_type "float"
	@java_type "float"
	@js_type "float"
	@go_type "float32";

datatype Double<8>
	@type_checker "Real"
	@c_type "double"
	@java_type "double"
	@js_type "double"
	@go_type "float64";

object String
	@serializable
	@c_type "char *"
	@arduino_type "String"
	@java_type "String"
    @js_type "String"
    @go_type "string";

enumeration DigitalState as UInt8
{
	LOW = 0
	HIGH = 1
}
