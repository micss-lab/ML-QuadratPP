/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 */
package org.thingml.xtext.thingML.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.thingml.xtext.thingML.util.ThingMLAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ThingMLItemProviderAdapterFactory extends ThingMLAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ThingMLItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ThingMLModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThingMLModelItemProvider thingMLModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ThingMLModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThingMLModelAdapter() {
		if (thingMLModelItemProvider == null) {
			thingMLModelItemProvider = new ThingMLModelItemProvider(this);
		}

		return thingMLModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PlatformAnnotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlatformAnnotationItemProvider platformAnnotationItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PlatformAnnotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlatformAnnotationAdapter() {
		if (platformAnnotationItemProvider == null) {
			platformAnnotationItemProvider = new PlatformAnnotationItemProvider(this);
		}

		return platformAnnotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NamedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedElementItemProvider namedElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NamedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedElementAdapter() {
		if (namedElementItemProvider == null) {
			namedElementItemProvider = new NamedElementItemProvider(this);
		}

		return namedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.AnnotatedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotatedElementItemProvider annotatedElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.AnnotatedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotatedElementAdapter() {
		if (annotatedElementItemProvider == null) {
			annotatedElementItemProvider = new AnnotatedElementItemProvider(this);
		}

		return annotatedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.TypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeRefItemProvider typeRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.TypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeRefAdapter() {
		if (typeRefItemProvider == null) {
			typeRefItemProvider = new TypeRefItemProvider(this);
		}

		return typeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeItemProvider typeItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAdapter() {
		if (typeItemProvider == null) {
			typeItemProvider = new TypeItemProvider(this);
		}

		return typeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PrimitiveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveTypeItemProvider primitiveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PrimitiveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveTypeAdapter() {
		if (primitiveTypeItemProvider == null) {
			primitiveTypeItemProvider = new PrimitiveTypeItemProvider(this);
		}

		return primitiveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ObjectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeItemProvider objectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ObjectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeAdapter() {
		if (objectTypeItemProvider == null) {
			objectTypeItemProvider = new ObjectTypeItemProvider(this);
		}

		return objectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Enumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationItemProvider enumerationItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Enumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationAdapter() {
		if (enumerationItemProvider == null) {
			enumerationItemProvider = new EnumerationItemProvider(this);
		}

		return enumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.EnumerationLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationLiteralItemProvider enumerationLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.EnumerationLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationLiteralAdapter() {
		if (enumerationLiteralItemProvider == null) {
			enumerationLiteralItemProvider = new EnumerationLiteralItemProvider(this);
		}

		return enumerationLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Thing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThingItemProvider thingItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Thing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThingAdapter() {
		if (thingItemProvider == null) {
			thingItemProvider = new ThingItemProvider(this);
		}

		return thingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PropertyAssign} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyAssignItemProvider propertyAssignItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PropertyAssign}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAssignAdapter() {
		if (propertyAssignItemProvider == null) {
			propertyAssignItemProvider = new PropertyAssignItemProvider(this);
		}

		return propertyAssignItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Protocol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProtocolItemProvider protocolItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Protocol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProtocolAdapter() {
		if (protocolItemProvider == null) {
			protocolItemProvider = new ProtocolItemProvider(this);
		}

		return protocolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Port} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortItemProvider portItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Port}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortAdapter() {
		if (portItemProvider == null) {
			portItemProvider = new PortItemProvider(this);
		}

		return portItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.RequiredPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredPortItemProvider requiredPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.RequiredPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredPortAdapter() {
		if (requiredPortItemProvider == null) {
			requiredPortItemProvider = new RequiredPortItemProvider(this);
		}

		return requiredPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ProvidedPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedPortItemProvider providedPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ProvidedPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedPortAdapter() {
		if (providedPortItemProvider == null) {
			providedPortItemProvider = new ProvidedPortItemProvider(this);
		}

		return providedPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.InternalPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalPortItemProvider internalPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.InternalPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalPortAdapter() {
		if (internalPortItemProvider == null) {
			internalPortItemProvider = new InternalPortItemProvider(this);
		}

		return internalPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.State} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StateItemProvider stateItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.State}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStateAdapter() {
		if (stateItemProvider == null) {
			stateItemProvider = new StateItemProvider(this);
		}

		return stateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Handler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HandlerItemProvider handlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Handler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHandlerAdapter() {
		if (handlerItemProvider == null) {
			handlerItemProvider = new HandlerItemProvider(this);
		}

		return handlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Transition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransitionItemProvider transitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Transition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransitionAdapter() {
		if (transitionItemProvider == null) {
			transitionItemProvider = new TransitionItemProvider(this);
		}

		return transitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.InternalTransition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalTransitionItemProvider internalTransitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.InternalTransition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalTransitionAdapter() {
		if (internalTransitionItemProvider == null) {
			internalTransitionItemProvider = new InternalTransitionItemProvider(this);
		}

		return internalTransitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.CompositeState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeStateItemProvider compositeStateItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.CompositeState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeStateAdapter() {
		if (compositeStateItemProvider == null) {
			compositeStateItemProvider = new CompositeStateItemProvider(this);
		}

		return compositeStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Session} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SessionItemProvider sessionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Session}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSessionAdapter() {
		if (sessionItemProvider == null) {
			sessionItemProvider = new SessionItemProvider(this);
		}

		return sessionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Region} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegionItemProvider regionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Region}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegionAdapter() {
		if (regionItemProvider == null) {
			regionItemProvider = new RegionItemProvider(this);
		}

		return regionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.FinalState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FinalStateItemProvider finalStateItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.FinalState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFinalStateAdapter() {
		if (finalStateItemProvider == null) {
			finalStateItemProvider = new FinalStateItemProvider(this);
		}

		return finalStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.StateContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StateContainerItemProvider stateContainerItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.StateContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStateContainerAdapter() {
		if (stateContainerItemProvider == null) {
			stateContainerItemProvider = new StateContainerItemProvider(this);
		}

		return stateContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.MessageParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageParameterItemProvider messageParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.MessageParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageParameterAdapter() {
		if (messageParameterItemProvider == null) {
			messageParameterItemProvider = new MessageParameterItemProvider(this);
		}

		return messageParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DataAnalytics} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataAnalyticsItemProvider dataAnalyticsItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DataAnalytics}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataAnalyticsAdapter() {
		if (dataAnalyticsItemProvider == null) {
			dataAnalyticsItemProvider = new DataAnalyticsItemProvider(this);
		}

		return dataAnalyticsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DataAnalyticsModelAlgorithm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataAnalyticsModelAlgorithmItemProvider dataAnalyticsModelAlgorithmItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DataAnalyticsModelAlgorithm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataAnalyticsModelAlgorithmAdapter() {
		if (dataAnalyticsModelAlgorithmItemProvider == null) {
			dataAnalyticsModelAlgorithmItemProvider = new DataAnalyticsModelAlgorithmItemProvider(this);
		}

		return dataAnalyticsModelAlgorithmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ML2_ModelAlgorithm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ML2_ModelAlgorithmItemProvider ml2_ModelAlgorithmItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ML2_ModelAlgorithm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createML2_ModelAlgorithmAdapter() {
		if (ml2_ModelAlgorithmItemProvider == null) {
			ml2_ModelAlgorithmItemProvider = new ML2_ModelAlgorithmItemProvider(this);
		}

		return ml2_ModelAlgorithmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PMML_ModelAlgorithm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PMML_ModelAlgorithmItemProvider pmmL_ModelAlgorithmItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PMML_ModelAlgorithm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPMML_ModelAlgorithmAdapter() {
		if (pmmL_ModelAlgorithmItemProvider == null) {
			pmmL_ModelAlgorithmItemProvider = new PMML_ModelAlgorithmItemProvider(this);
		}

		return pmmL_ModelAlgorithmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PFA_ModelAlgorithm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PFA_ModelAlgorithmItemProvider pfA_ModelAlgorithmItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PFA_ModelAlgorithm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPFA_ModelAlgorithmAdapter() {
		if (pfA_ModelAlgorithmItemProvider == null) {
			pfA_ModelAlgorithmItemProvider = new PFA_ModelAlgorithmItemProvider(this);
		}

		return pfA_ModelAlgorithmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ClassifierWithPredictionCertaintyProbabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierWithPredictionCertaintyProbabilitiesItemProvider classifierWithPredictionCertaintyProbabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ClassifierWithPredictionCertaintyProbabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierWithPredictionCertaintyProbabilitiesAdapter() {
		if (classifierWithPredictionCertaintyProbabilitiesItemProvider == null) {
			classifierWithPredictionCertaintyProbabilitiesItemProvider = new ClassifierWithPredictionCertaintyProbabilitiesItemProvider(this);
		}

		return classifierWithPredictionCertaintyProbabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LinearRegression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearRegressionItemProvider linearRegressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LinearRegression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearRegressionAdapter() {
		if (linearRegressionItemProvider == null) {
			linearRegressionItemProvider = new LinearRegressionItemProvider(this);
		}

		return linearRegressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LinearClassifierLogisticRegression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearClassifierLogisticRegressionItemProvider linearClassifierLogisticRegressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LinearClassifierLogisticRegression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearClassifierLogisticRegressionAdapter() {
		if (linearClassifierLogisticRegressionItemProvider == null) {
			linearClassifierLogisticRegressionItemProvider = new LinearClassifierLogisticRegressionItemProvider(this);
		}

		return linearClassifierLogisticRegressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NaiveBayesGaussian} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NaiveBayesGaussianItemProvider naiveBayesGaussianItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NaiveBayesGaussian}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNaiveBayesGaussianAdapter() {
		if (naiveBayesGaussianItemProvider == null) {
			naiveBayesGaussianItemProvider = new NaiveBayesGaussianItemProvider(this);
		}

		return naiveBayesGaussianItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NaiveBayesMultinomial} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NaiveBayesMultinomialItemProvider naiveBayesMultinomialItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NaiveBayesMultinomial}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNaiveBayesMultinomialAdapter() {
		if (naiveBayesMultinomialItemProvider == null) {
			naiveBayesMultinomialItemProvider = new NaiveBayesMultinomialItemProvider(this);
		}

		return naiveBayesMultinomialItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NaiveBayesComplement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NaiveBayesComplementItemProvider naiveBayesComplementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NaiveBayesComplement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNaiveBayesComplementAdapter() {
		if (naiveBayesComplementItemProvider == null) {
			naiveBayesComplementItemProvider = new NaiveBayesComplementItemProvider(this);
		}

		return naiveBayesComplementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NaiveBayesBernoulli} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NaiveBayesBernoulliItemProvider naiveBayesBernoulliItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NaiveBayesBernoulli}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNaiveBayesBernoulliAdapter() {
		if (naiveBayesBernoulliItemProvider == null) {
			naiveBayesBernoulliItemProvider = new NaiveBayesBernoulliItemProvider(this);
		}

		return naiveBayesBernoulliItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NaiveBayesCategorical} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NaiveBayesCategoricalItemProvider naiveBayesCategoricalItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NaiveBayesCategorical}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNaiveBayesCategoricalAdapter() {
		if (naiveBayesCategoricalItemProvider == null) {
			naiveBayesCategoricalItemProvider = new NaiveBayesCategoricalItemProvider(this);
		}

		return naiveBayesCategoricalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DecisionTreeRegressor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecisionTreeRegressorItemProvider decisionTreeRegressorItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DecisionTreeRegressor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecisionTreeRegressorAdapter() {
		if (decisionTreeRegressorItemProvider == null) {
			decisionTreeRegressorItemProvider = new DecisionTreeRegressorItemProvider(this);
		}

		return decisionTreeRegressorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DecisionTreeClassifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecisionTreeClassifierItemProvider decisionTreeClassifierItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DecisionTreeClassifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecisionTreeClassifierAdapter() {
		if (decisionTreeClassifierItemProvider == null) {
			decisionTreeClassifierItemProvider = new DecisionTreeClassifierItemProvider(this);
		}

		return decisionTreeClassifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.RandomForestRegressor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomForestRegressorItemProvider randomForestRegressorItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.RandomForestRegressor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomForestRegressorAdapter() {
		if (randomForestRegressorItemProvider == null) {
			randomForestRegressorItemProvider = new RandomForestRegressorItemProvider(this);
		}

		return randomForestRegressorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.RandomForestClassifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomForestClassifierItemProvider randomForestClassifierItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.RandomForestClassifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomForestClassifierAdapter() {
		if (randomForestClassifierItemProvider == null) {
			randomForestClassifierItemProvider = new RandomForestClassifierItemProvider(this);
		}

		return randomForestClassifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NN_MultilayerPerceptron} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NN_MultilayerPerceptronItemProvider nN_MultilayerPerceptronItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NN_MultilayerPerceptron}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNN_MultilayerPerceptronAdapter() {
		if (nN_MultilayerPerceptronItemProvider == null) {
			nN_MultilayerPerceptronItemProvider = new NN_MultilayerPerceptronItemProvider(this);
		}

		return nN_MultilayerPerceptronItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.KMeans} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KMeansItemProvider kMeansItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.KMeans}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKMeansAdapter() {
		if (kMeansItemProvider == null) {
			kMeansItemProvider = new KMeansItemProvider(this);
		}

		return kMeansItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.MiniBatchKMeans} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MiniBatchKMeansItemProvider miniBatchKMeansItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.MiniBatchKMeans}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMiniBatchKMeansAdapter() {
		if (miniBatchKMeansItemProvider == null) {
			miniBatchKMeansItemProvider = new MiniBatchKMeansItemProvider(this);
		}

		return miniBatchKMeansItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DBSCAN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DBSCANItemProvider dbscanItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DBSCAN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDBSCANAdapter() {
		if (dbscanItemProvider == null) {
			dbscanItemProvider = new DBSCANItemProvider(this);
		}

		return dbscanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.SpectralClustering} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpectralClusteringItemProvider spectralClusteringItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.SpectralClustering}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpectralClusteringAdapter() {
		if (spectralClusteringItemProvider == null) {
			spectralClusteringItemProvider = new SpectralClusteringItemProvider(this);
		}

		return spectralClusteringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.GaussianMixture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GaussianMixtureItemProvider gaussianMixtureItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.GaussianMixture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGaussianMixtureAdapter() {
		if (gaussianMixtureItemProvider == null) {
			gaussianMixtureItemProvider = new GaussianMixtureItemProvider(this);
		}

		return gaussianMixtureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.SelfTrainingClassifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelfTrainingClassifierItemProvider selfTrainingClassifierItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.SelfTrainingClassifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelfTrainingClassifierAdapter() {
		if (selfTrainingClassifierItemProvider == null) {
			selfTrainingClassifierItemProvider = new SelfTrainingClassifierItemProvider(this);
		}

		return selfTrainingClassifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LabelPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelPropagationItemProvider labelPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LabelPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelPropagationAdapter() {
		if (labelPropagationItemProvider == null) {
			labelPropagationItemProvider = new LabelPropagationItemProvider(this);
		}

		return labelPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LabelSpreading} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelSpreadingItemProvider labelSpreadingItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LabelSpreading}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelSpreadingAdapter() {
		if (labelSpreadingItemProvider == null) {
			labelSpreadingItemProvider = new LabelSpreadingItemProvider(this);
		}

		return labelSpreadingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Event} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventItemProvider eventItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Event}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventAdapter() {
		if (eventItemProvider == null) {
			eventItemProvider = new EventItemProvider(this);
		}

		return eventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ReceiveMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceiveMessageItemProvider receiveMessageItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ReceiveMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceiveMessageAdapter() {
		if (receiveMessageItemProvider == null) {
			receiveMessageItemProvider = new ReceiveMessageItemProvider(this);
		}

		return receiveMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Action} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionItemProvider actionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Action}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionAdapter() {
		if (actionItemProvider == null) {
			actionItemProvider = new ActionItemProvider(this);
		}

		return actionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ActionBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionBlockItemProvider actionBlockItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ActionBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionBlockAdapter() {
		if (actionBlockItemProvider == null) {
			actionBlockItemProvider = new ActionBlockItemProvider(this);
		}

		return actionBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ExternStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternStatementItemProvider externStatementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ExternStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternStatementAdapter() {
		if (externStatementItemProvider == null) {
			externStatementItemProvider = new ExternStatementItemProvider(this);
		}

		return externStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LocalVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalVariableItemProvider localVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LocalVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocalVariableAdapter() {
		if (localVariableItemProvider == null) {
			localVariableItemProvider = new LocalVariableItemProvider(this);
		}

		return localVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.SendAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendActionItemProvider sendActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.SendAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendActionAdapter() {
		if (sendActionItemProvider == null) {
			sendActionItemProvider = new SendActionItemProvider(this);
		}

		return sendActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.VariableAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableAssignmentItemProvider variableAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.VariableAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAssignmentAdapter() {
		if (variableAssignmentItemProvider == null) {
			variableAssignmentItemProvider = new VariableAssignmentItemProvider(this);
		}

		return variableAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Increment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncrementItemProvider incrementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Increment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncrementAdapter() {
		if (incrementItemProvider == null) {
			incrementItemProvider = new IncrementItemProvider(this);
		}

		return incrementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Decrement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecrementItemProvider decrementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Decrement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecrementAdapter() {
		if (decrementItemProvider == null) {
			decrementItemProvider = new DecrementItemProvider(this);
		}

		return decrementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ForAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForActionItemProvider forActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ForAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForActionAdapter() {
		if (forActionItemProvider == null) {
			forActionItemProvider = new ForActionItemProvider(this);
		}

		return forActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LoopAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopActionItemProvider loopActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LoopAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopActionAdapter() {
		if (loopActionItemProvider == null) {
			loopActionItemProvider = new LoopActionItemProvider(this);
		}

		return loopActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ConditionalAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalActionItemProvider conditionalActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ConditionalAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalActionAdapter() {
		if (conditionalActionItemProvider == null) {
			conditionalActionItemProvider = new ConditionalActionItemProvider(this);
		}

		return conditionalActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ReturnAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnActionItemProvider returnActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ReturnAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnActionAdapter() {
		if (returnActionItemProvider == null) {
			returnActionItemProvider = new ReturnActionItemProvider(this);
		}

		return returnActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PrintAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrintActionItemProvider printActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PrintAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrintActionAdapter() {
		if (printActionItemProvider == null) {
			printActionItemProvider = new PrintActionItemProvider(this);
		}

		return printActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ErrorAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorActionItemProvider errorActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ErrorAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorActionAdapter() {
		if (errorActionItemProvider == null) {
			errorActionItemProvider = new ErrorActionItemProvider(this);
		}

		return errorActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.StartSession} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartSessionItemProvider startSessionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.StartSession}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartSessionAdapter() {
		if (startSessionItemProvider == null) {
			startSessionItemProvider = new StartSessionItemProvider(this);
		}

		return startSessionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.FunctionCallStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionCallStatementItemProvider functionCallStatementItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.FunctionCallStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionCallStatementAdapter() {
		if (functionCallStatementItemProvider == null) {
			functionCallStatementItemProvider = new FunctionCallStatementItemProvider(this);
		}

		return functionCallStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DASaveAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DASaveActionItemProvider daSaveActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DASaveAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDASaveActionAdapter() {
		if (daSaveActionItemProvider == null) {
			daSaveActionItemProvider = new DASaveActionItemProvider(this);
		}

		return daSaveActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DAPreprocessAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DAPreprocessActionItemProvider daPreprocessActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DAPreprocessAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDAPreprocessActionAdapter() {
		if (daPreprocessActionItemProvider == null) {
			daPreprocessActionItemProvider = new DAPreprocessActionItemProvider(this);
		}

		return daPreprocessActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DATrainAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DATrainActionItemProvider daTrainActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DATrainAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDATrainActionAdapter() {
		if (daTrainActionItemProvider == null) {
			daTrainActionItemProvider = new DATrainActionItemProvider(this);
		}

		return daTrainActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DAPredictAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DAPredictActionItemProvider daPredictActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DAPredictAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDAPredictActionAdapter() {
		if (daPredictActionItemProvider == null) {
			daPredictActionItemProvider = new DAPredictActionItemProvider(this);
		}

		return daPredictActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DAPreTrainedPredictAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DAPreTrainedPredictActionItemProvider daPreTrainedPredictActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DAPreTrainedPredictAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDAPreTrainedPredictActionAdapter() {
		if (daPreTrainedPredictActionItemProvider == null) {
			daPreTrainedPredictActionItemProvider = new DAPreTrainedPredictActionItemProvider(this);
		}

		return daPreTrainedPredictActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ExternExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternExpressionItemProvider externExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ExternExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternExpressionAdapter() {
		if (externExpressionItemProvider == null) {
			externExpressionItemProvider = new ExternExpressionItemProvider(this);
		}

		return externExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Literal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralItemProvider literalItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Literal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralAdapter() {
		if (literalItemProvider == null) {
			literalItemProvider = new LiteralItemProvider(this);
		}

		return literalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ArrayInit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayInitItemProvider arrayInitItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ArrayInit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayInitAdapter() {
		if (arrayInitItemProvider == null) {
			arrayInitItemProvider = new ArrayInitItemProvider(this);
		}

		return arrayInitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.EnumLiteralRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumLiteralRefItemProvider enumLiteralRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.EnumLiteralRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumLiteralRefAdapter() {
		if (enumLiteralRefItemProvider == null) {
			enumLiteralRefItemProvider = new EnumLiteralRefItemProvider(this);
		}

		return enumLiteralRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ByteLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ByteLiteralItemProvider byteLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ByteLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createByteLiteralAdapter() {
		if (byteLiteralItemProvider == null) {
			byteLiteralItemProvider = new ByteLiteralItemProvider(this);
		}

		return byteLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.CharLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharLiteralItemProvider charLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.CharLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharLiteralAdapter() {
		if (charLiteralItemProvider == null) {
			charLiteralItemProvider = new CharLiteralItemProvider(this);
		}

		return charLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.IntegerLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerLiteralItemProvider integerLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.IntegerLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerLiteralAdapter() {
		if (integerLiteralItemProvider == null) {
			integerLiteralItemProvider = new IntegerLiteralItemProvider(this);
		}

		return integerLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.BooleanLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanLiteralItemProvider booleanLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.BooleanLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanLiteralAdapter() {
		if (booleanLiteralItemProvider == null) {
			booleanLiteralItemProvider = new BooleanLiteralItemProvider(this);
		}

		return booleanLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.StringLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringLiteralItemProvider stringLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.StringLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringLiteralAdapter() {
		if (stringLiteralItemProvider == null) {
			stringLiteralItemProvider = new StringLiteralItemProvider(this);
		}

		return stringLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DoubleLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleLiteralItemProvider doubleLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DoubleLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleLiteralAdapter() {
		if (doubleLiteralItemProvider == null) {
			doubleLiteralItemProvider = new DoubleLiteralItemProvider(this);
		}

		return doubleLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PropertyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyReferenceItemProvider propertyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PropertyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyReferenceAdapter() {
		if (propertyReferenceItemProvider == null) {
			propertyReferenceItemProvider = new PropertyReferenceItemProvider(this);
		}

		return propertyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.EventReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventReferenceItemProvider eventReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.EventReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventReferenceAdapter() {
		if (eventReferenceItemProvider == null) {
			eventReferenceItemProvider = new EventReferenceItemProvider(this);
		}

		return eventReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.FunctionCallExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionCallExpressionItemProvider functionCallExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.FunctionCallExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionCallExpressionAdapter() {
		if (functionCallExpressionItemProvider == null) {
			functionCallExpressionItemProvider = new FunctionCallExpressionItemProvider(this);
		}

		return functionCallExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Configuration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationItemProvider configurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Configuration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAdapter() {
		if (configurationItemProvider == null) {
			configurationItemProvider = new ConfigurationItemProvider(this);
		}

		return configurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Instance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceItemProvider instanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Instance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceAdapter() {
		if (instanceItemProvider == null) {
			instanceItemProvider = new InstanceItemProvider(this);
		}

		return instanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ConfigPropertyAssign} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigPropertyAssignItemProvider configPropertyAssignItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ConfigPropertyAssign}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigPropertyAssignAdapter() {
		if (configPropertyAssignItemProvider == null) {
			configPropertyAssignItemProvider = new ConfigPropertyAssignItemProvider(this);
		}

		return configPropertyAssignItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.AbstractConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractConnectorItemProvider abstractConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.AbstractConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractConnectorAdapter() {
		if (abstractConnectorItemProvider == null) {
			abstractConnectorItemProvider = new AbstractConnectorItemProvider(this);
		}

		return abstractConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.Connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.Connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new ConnectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ExternalConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalConnectorItemProvider externalConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ExternalConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalConnectorAdapter() {
		if (externalConnectorItemProvider == null) {
			externalConnectorItemProvider = new ExternalConnectorItemProvider(this);
		}

		return externalConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.OrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrExpressionItemProvider orExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.OrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrExpressionAdapter() {
		if (orExpressionItemProvider == null) {
			orExpressionItemProvider = new OrExpressionItemProvider(this);
		}

		return orExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.AndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndExpressionItemProvider andExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.AndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndExpressionAdapter() {
		if (andExpressionItemProvider == null) {
			andExpressionItemProvider = new AndExpressionItemProvider(this);
		}

		return andExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.EqualsExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualsExpressionItemProvider equalsExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.EqualsExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualsExpressionAdapter() {
		if (equalsExpressionItemProvider == null) {
			equalsExpressionItemProvider = new EqualsExpressionItemProvider(this);
		}

		return equalsExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NotEqualsExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotEqualsExpressionItemProvider notEqualsExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NotEqualsExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotEqualsExpressionAdapter() {
		if (notEqualsExpressionItemProvider == null) {
			notEqualsExpressionItemProvider = new NotEqualsExpressionItemProvider(this);
		}

		return notEqualsExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.GreaterExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GreaterExpressionItemProvider greaterExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.GreaterExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGreaterExpressionAdapter() {
		if (greaterExpressionItemProvider == null) {
			greaterExpressionItemProvider = new GreaterExpressionItemProvider(this);
		}

		return greaterExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LowerExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LowerExpressionItemProvider lowerExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LowerExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLowerExpressionAdapter() {
		if (lowerExpressionItemProvider == null) {
			lowerExpressionItemProvider = new LowerExpressionItemProvider(this);
		}

		return lowerExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.GreaterOrEqualExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GreaterOrEqualExpressionItemProvider greaterOrEqualExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.GreaterOrEqualExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGreaterOrEqualExpressionAdapter() {
		if (greaterOrEqualExpressionItemProvider == null) {
			greaterOrEqualExpressionItemProvider = new GreaterOrEqualExpressionItemProvider(this);
		}

		return greaterOrEqualExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.LowerOrEqualExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LowerOrEqualExpressionItemProvider lowerOrEqualExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.LowerOrEqualExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLowerOrEqualExpressionAdapter() {
		if (lowerOrEqualExpressionItemProvider == null) {
			lowerOrEqualExpressionItemProvider = new LowerOrEqualExpressionItemProvider(this);
		}

		return lowerOrEqualExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.PlusExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlusExpressionItemProvider plusExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.PlusExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlusExpressionAdapter() {
		if (plusExpressionItemProvider == null) {
			plusExpressionItemProvider = new PlusExpressionItemProvider(this);
		}

		return plusExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.MinusExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinusExpressionItemProvider minusExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.MinusExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinusExpressionAdapter() {
		if (minusExpressionItemProvider == null) {
			minusExpressionItemProvider = new MinusExpressionItemProvider(this);
		}

		return minusExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.TimesExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimesExpressionItemProvider timesExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.TimesExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimesExpressionAdapter() {
		if (timesExpressionItemProvider == null) {
			timesExpressionItemProvider = new TimesExpressionItemProvider(this);
		}

		return timesExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.DivExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivExpressionItemProvider divExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.DivExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivExpressionAdapter() {
		if (divExpressionItemProvider == null) {
			divExpressionItemProvider = new DivExpressionItemProvider(this);
		}

		return divExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ModExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModExpressionItemProvider modExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ModExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModExpressionAdapter() {
		if (modExpressionItemProvider == null) {
			modExpressionItemProvider = new ModExpressionItemProvider(this);
		}

		return modExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.CastExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CastExpressionItemProvider castExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.CastExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCastExpressionAdapter() {
		if (castExpressionItemProvider == null) {
			castExpressionItemProvider = new CastExpressionItemProvider(this);
		}

		return castExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ExpressionGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionGroupItemProvider expressionGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ExpressionGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionGroupAdapter() {
		if (expressionGroupItemProvider == null) {
			expressionGroupItemProvider = new ExpressionGroupItemProvider(this);
		}

		return expressionGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.NotExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotExpressionItemProvider notExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.NotExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotExpressionAdapter() {
		if (notExpressionItemProvider == null) {
			notExpressionItemProvider = new NotExpressionItemProvider(this);
		}

		return notExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.UnaryMinus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryMinusItemProvider unaryMinusItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.UnaryMinus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryMinusAdapter() {
		if (unaryMinusItemProvider == null) {
			unaryMinusItemProvider = new UnaryMinusItemProvider(this);
		}

		return unaryMinusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.thingml.xtext.thingML.ArrayIndex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayIndexItemProvider arrayIndexItemProvider;

	/**
	 * This creates an adapter for a {@link org.thingml.xtext.thingML.ArrayIndex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayIndexAdapter() {
		if (arrayIndexItemProvider == null) {
			arrayIndexItemProvider = new ArrayIndexItemProvider(this);
		}

		return arrayIndexItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (thingMLModelItemProvider != null) thingMLModelItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (platformAnnotationItemProvider != null) platformAnnotationItemProvider.dispose();
		if (namedElementItemProvider != null) namedElementItemProvider.dispose();
		if (annotatedElementItemProvider != null) annotatedElementItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (typeRefItemProvider != null) typeRefItemProvider.dispose();
		if (typeItemProvider != null) typeItemProvider.dispose();
		if (primitiveTypeItemProvider != null) primitiveTypeItemProvider.dispose();
		if (objectTypeItemProvider != null) objectTypeItemProvider.dispose();
		if (enumerationItemProvider != null) enumerationItemProvider.dispose();
		if (enumerationLiteralItemProvider != null) enumerationLiteralItemProvider.dispose();
		if (thingItemProvider != null) thingItemProvider.dispose();
		if (propertyAssignItemProvider != null) propertyAssignItemProvider.dispose();
		if (protocolItemProvider != null) protocolItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (messageItemProvider != null) messageItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (portItemProvider != null) portItemProvider.dispose();
		if (requiredPortItemProvider != null) requiredPortItemProvider.dispose();
		if (providedPortItemProvider != null) providedPortItemProvider.dispose();
		if (internalPortItemProvider != null) internalPortItemProvider.dispose();
		if (stateItemProvider != null) stateItemProvider.dispose();
		if (handlerItemProvider != null) handlerItemProvider.dispose();
		if (transitionItemProvider != null) transitionItemProvider.dispose();
		if (internalTransitionItemProvider != null) internalTransitionItemProvider.dispose();
		if (compositeStateItemProvider != null) compositeStateItemProvider.dispose();
		if (sessionItemProvider != null) sessionItemProvider.dispose();
		if (regionItemProvider != null) regionItemProvider.dispose();
		if (finalStateItemProvider != null) finalStateItemProvider.dispose();
		if (stateContainerItemProvider != null) stateContainerItemProvider.dispose();
		if (messageParameterItemProvider != null) messageParameterItemProvider.dispose();
		if (dataAnalyticsItemProvider != null) dataAnalyticsItemProvider.dispose();
		if (dataAnalyticsModelAlgorithmItemProvider != null) dataAnalyticsModelAlgorithmItemProvider.dispose();
		if (ml2_ModelAlgorithmItemProvider != null) ml2_ModelAlgorithmItemProvider.dispose();
		if (pmmL_ModelAlgorithmItemProvider != null) pmmL_ModelAlgorithmItemProvider.dispose();
		if (pfA_ModelAlgorithmItemProvider != null) pfA_ModelAlgorithmItemProvider.dispose();
		if (classifierWithPredictionCertaintyProbabilitiesItemProvider != null) classifierWithPredictionCertaintyProbabilitiesItemProvider.dispose();
		if (linearRegressionItemProvider != null) linearRegressionItemProvider.dispose();
		if (linearClassifierLogisticRegressionItemProvider != null) linearClassifierLogisticRegressionItemProvider.dispose();
		if (naiveBayesGaussianItemProvider != null) naiveBayesGaussianItemProvider.dispose();
		if (naiveBayesMultinomialItemProvider != null) naiveBayesMultinomialItemProvider.dispose();
		if (naiveBayesComplementItemProvider != null) naiveBayesComplementItemProvider.dispose();
		if (naiveBayesBernoulliItemProvider != null) naiveBayesBernoulliItemProvider.dispose();
		if (naiveBayesCategoricalItemProvider != null) naiveBayesCategoricalItemProvider.dispose();
		if (decisionTreeRegressorItemProvider != null) decisionTreeRegressorItemProvider.dispose();
		if (decisionTreeClassifierItemProvider != null) decisionTreeClassifierItemProvider.dispose();
		if (randomForestRegressorItemProvider != null) randomForestRegressorItemProvider.dispose();
		if (randomForestClassifierItemProvider != null) randomForestClassifierItemProvider.dispose();
		if (nN_MultilayerPerceptronItemProvider != null) nN_MultilayerPerceptronItemProvider.dispose();
		if (kMeansItemProvider != null) kMeansItemProvider.dispose();
		if (miniBatchKMeansItemProvider != null) miniBatchKMeansItemProvider.dispose();
		if (dbscanItemProvider != null) dbscanItemProvider.dispose();
		if (spectralClusteringItemProvider != null) spectralClusteringItemProvider.dispose();
		if (gaussianMixtureItemProvider != null) gaussianMixtureItemProvider.dispose();
		if (selfTrainingClassifierItemProvider != null) selfTrainingClassifierItemProvider.dispose();
		if (labelPropagationItemProvider != null) labelPropagationItemProvider.dispose();
		if (labelSpreadingItemProvider != null) labelSpreadingItemProvider.dispose();
		if (eventItemProvider != null) eventItemProvider.dispose();
		if (receiveMessageItemProvider != null) receiveMessageItemProvider.dispose();
		if (actionItemProvider != null) actionItemProvider.dispose();
		if (actionBlockItemProvider != null) actionBlockItemProvider.dispose();
		if (externStatementItemProvider != null) externStatementItemProvider.dispose();
		if (localVariableItemProvider != null) localVariableItemProvider.dispose();
		if (sendActionItemProvider != null) sendActionItemProvider.dispose();
		if (variableAssignmentItemProvider != null) variableAssignmentItemProvider.dispose();
		if (incrementItemProvider != null) incrementItemProvider.dispose();
		if (decrementItemProvider != null) decrementItemProvider.dispose();
		if (forActionItemProvider != null) forActionItemProvider.dispose();
		if (loopActionItemProvider != null) loopActionItemProvider.dispose();
		if (conditionalActionItemProvider != null) conditionalActionItemProvider.dispose();
		if (returnActionItemProvider != null) returnActionItemProvider.dispose();
		if (printActionItemProvider != null) printActionItemProvider.dispose();
		if (errorActionItemProvider != null) errorActionItemProvider.dispose();
		if (startSessionItemProvider != null) startSessionItemProvider.dispose();
		if (functionCallStatementItemProvider != null) functionCallStatementItemProvider.dispose();
		if (daSaveActionItemProvider != null) daSaveActionItemProvider.dispose();
		if (daPreprocessActionItemProvider != null) daPreprocessActionItemProvider.dispose();
		if (daTrainActionItemProvider != null) daTrainActionItemProvider.dispose();
		if (daPredictActionItemProvider != null) daPredictActionItemProvider.dispose();
		if (daPreTrainedPredictActionItemProvider != null) daPreTrainedPredictActionItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (externExpressionItemProvider != null) externExpressionItemProvider.dispose();
		if (literalItemProvider != null) literalItemProvider.dispose();
		if (arrayInitItemProvider != null) arrayInitItemProvider.dispose();
		if (enumLiteralRefItemProvider != null) enumLiteralRefItemProvider.dispose();
		if (byteLiteralItemProvider != null) byteLiteralItemProvider.dispose();
		if (charLiteralItemProvider != null) charLiteralItemProvider.dispose();
		if (integerLiteralItemProvider != null) integerLiteralItemProvider.dispose();
		if (booleanLiteralItemProvider != null) booleanLiteralItemProvider.dispose();
		if (stringLiteralItemProvider != null) stringLiteralItemProvider.dispose();
		if (doubleLiteralItemProvider != null) doubleLiteralItemProvider.dispose();
		if (propertyReferenceItemProvider != null) propertyReferenceItemProvider.dispose();
		if (eventReferenceItemProvider != null) eventReferenceItemProvider.dispose();
		if (functionCallExpressionItemProvider != null) functionCallExpressionItemProvider.dispose();
		if (configurationItemProvider != null) configurationItemProvider.dispose();
		if (instanceItemProvider != null) instanceItemProvider.dispose();
		if (configPropertyAssignItemProvider != null) configPropertyAssignItemProvider.dispose();
		if (abstractConnectorItemProvider != null) abstractConnectorItemProvider.dispose();
		if (connectorItemProvider != null) connectorItemProvider.dispose();
		if (externalConnectorItemProvider != null) externalConnectorItemProvider.dispose();
		if (orExpressionItemProvider != null) orExpressionItemProvider.dispose();
		if (andExpressionItemProvider != null) andExpressionItemProvider.dispose();
		if (equalsExpressionItemProvider != null) equalsExpressionItemProvider.dispose();
		if (notEqualsExpressionItemProvider != null) notEqualsExpressionItemProvider.dispose();
		if (greaterExpressionItemProvider != null) greaterExpressionItemProvider.dispose();
		if (lowerExpressionItemProvider != null) lowerExpressionItemProvider.dispose();
		if (greaterOrEqualExpressionItemProvider != null) greaterOrEqualExpressionItemProvider.dispose();
		if (lowerOrEqualExpressionItemProvider != null) lowerOrEqualExpressionItemProvider.dispose();
		if (plusExpressionItemProvider != null) plusExpressionItemProvider.dispose();
		if (minusExpressionItemProvider != null) minusExpressionItemProvider.dispose();
		if (timesExpressionItemProvider != null) timesExpressionItemProvider.dispose();
		if (divExpressionItemProvider != null) divExpressionItemProvider.dispose();
		if (modExpressionItemProvider != null) modExpressionItemProvider.dispose();
		if (castExpressionItemProvider != null) castExpressionItemProvider.dispose();
		if (expressionGroupItemProvider != null) expressionGroupItemProvider.dispose();
		if (notExpressionItemProvider != null) notExpressionItemProvider.dispose();
		if (unaryMinusItemProvider != null) unaryMinusItemProvider.dispose();
		if (arrayIndexItemProvider != null) arrayIndexItemProvider.dispose();
	}

}
