import "brickAPI.thingml"
import "../button.thingml"


thing ButtonScala includes BrickSensor, Button
@pim "Button"
@platform "scala"
@scala_trait "org.thingml.devices.Observer[Boolean]" 
{
    set device = 'new org.thingml.devices.ButtonDemo()'
    
    
    //last value sent by the mock device
    //can be sent to cliend requesting a value (pull mode)
    property lastValue : Boolean = 'null'
	
	function newValue(v : Boolean)@override "true" 
	do
        lastValue = v
		SensorMockUp!update()
	end
	
	function register() 
	do
		'' & device & '.asInstanceOf[org.thingml.devices.Observable[Boolean]].register(this)'
	end
    
	statechart behavior init Ready {
		
		on entry 
        do 
		  'register()'
		end

        //This is an example to implement push mode (send the last value whenever the mock is udapted)
        internal 
        event m : Sensor?update
        action
        do
            if (lastValue) 
            do
                Button!press()
            end
            if (lastValue)
            do
                Button!release()
            end
        end
			
		state Ready {}
		
	}
}