//*
// Anatoly Vasilevskiy - 18/05/2015
// Electronic bricks library.
//
// This file provides an interface with the Servo. 
//*

import "../servo.thingml"

object ServoType
@c_type "Servo";

thing ServoArduino includes ServoFrgmnt
@pim "Servo"
@platform "arduino"
@c_header "#include <Servo.h>"
{

	property myservo : ServoType
	property current_angle : UInt8
	property pin : DigitalPin = DigitalPin:PIN_13
	readonly property max_rotate_angle : UInt8 = 180
	
	function rotate_servo(position : UInt8) do
		if(position > max_rotate_angle) do
			position = max_rotate_angle
		end
		''&myservo&'.write('&position&');'
	end
	
	function angel_servo() : UInt8 do
		return ''&myservo&'.read();'
	end

    statechart ServoArduino init RunningServo {
            
        state RunningServo {
        	on entry do
        		''&myservo&'.attach('&pin&');'
        	end
            
        	internal event m : ServeDrift?rotate
        	action do
        		rotate_servo(m.angle)
        	end
        	
        	internal event m : ServeDrift?angle
        	action do
        		current_angle = angel_servo()
        		ServeDrift!angle_position(current_angle)
        	end 
        
        	transition -> ShuttingDown
        	event ServeDrift?detach
        }
        
        state ShuttingDown {
        	on entry do
        		''&myservo&'.detach();'
        	end
        	
        	transition -> RunningServo
        	event m : ServeDrift?attach
        	action pin = m.pin
        	
        	transition -> RunningServo
        	event ServeDrift?reattach
        }
    }
}
 
