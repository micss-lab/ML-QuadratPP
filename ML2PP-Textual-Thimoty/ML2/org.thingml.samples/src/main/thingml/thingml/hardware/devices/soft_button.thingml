import "../bricks/button.thingml"

thing fragment SoftButtonMsgs 
{
	message click ();
	message double_click ();
	message long_press ();
}

thing SoftButton includes ButtonMsgs, SoftButtonMsgs, TimerMsgs
{	

	readonly property long_delay : UInt16 = 1000
	readonly property double_delay : UInt16 = 250

	required port Button 
    {
		receives press, release
	}
	
	required port Timer 
    {
		sends timer_start, timer_cancel
		receives timer_timeout
	}

	provided port SoftButton 
    {
		sends click, double_click, long_press
	}

	statechart SoftButtonImpl init Idle 
    {
        state Idle 
        {
            transition pressed -> Pressed
            event m: Button?press
        }
        
        state Pressed 
        {
			on entry Timer!timer_start (long_delay)
			
			transition long -> Idle
			event Timer?timer_timeout
			after SoftButton!long_press ()
			
			transition click -> Released
			event Button?release
			action Timer!timer_cancel ()
        }
        
        state Released 
        {
        	on entry Timer!timer_start (double_delay)
        	on exit Timer!timer_cancel ()
        
        	transition click -> Idle
			event Timer?timer_timeout
			action SoftButton!click ()
			
			transition double -> Idle
            event Button?press
            action SoftButton!double_click () 
        }
    }
}