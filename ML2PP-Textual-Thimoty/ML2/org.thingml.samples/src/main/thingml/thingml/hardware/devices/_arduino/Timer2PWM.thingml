import "../../arduino/_arduino/arduino.thingml"

/**
 * Provide 32kHz PWM signal with 255 steps resolution
 * on pin 11 (pwmA) and pin 3 (pwmB)
 */
enumeration T2PWMChannel 
	@java_type "byte"
    @c_byte_size "1"
	@c_type "uint8_t"
{
	A @enum_val "0"
	B @enum_val "1"
}

thing fragment Timer2PWMMsgs {
	message setpwm (channel: T2PWMChannel, pwm : UInt8);
}

thing Timer2PWM includes Timer2PWMMsgs, ArduinoMsgs
{	

	// Events generated by the buttons
	provided port Timer2PWM {
		receives setpwm
	}
	
	 statechart Timer2PWMImpl init Timer2PWM {
       
       on entry do
       	  // Make pin PB3 and output (arduino pin 11)
       	  'DDRB |= (1 << DDD3);'
       	  // Make pin PD3 and output (arduino pin ??)
       	  'DDRD |= (1 << DDD3);'
       	  // set PWM for 0% duty cycle  
       	  'OCR2A = 0;'
       	  'OCR2B = 0;'
       	  // set PWM mode to "phase correct"
       	  'TCCR2A = TCCR2A & 0b11111100 | 0b01;'
       	  // activate PWM for OCRA on pin PB3
       	  'TCCR2A = TCCR2A & 0b00111111 | 0b10000000;'
       	   // activate PWM for OCRB on pin PD3
       	  'TCCR2A = TCCR2A & 0b11001111 | 0b00100000;'
       	  // no pre-scaler
       	  'TCCR2B = TCCR2B & 0b11111000 | 0b001;'
       end
       
       state Timer2PWM {
       		
       		internal event m : Timer2PWM?setpwm
       		guard m.channel == T2PWMChannel:A
       		action 'OCR2A = '& m.pwm &';'
       		
       		internal event m : Timer2PWM?setpwm
       		guard m.channel == T2PWMChannel:A
       		action 'OCR2B = '& m.pwm &';'
       }
       
    }
}