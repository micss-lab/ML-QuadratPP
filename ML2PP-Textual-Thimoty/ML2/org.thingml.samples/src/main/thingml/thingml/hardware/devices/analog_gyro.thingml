import "../../thingml.thingml"
import "../io/analog_input.thingml"


thing fragment AnalogGyroMsg {
    message callibrate_gyro();
    message gyro_ready();
    message reset_heading(); // Set the heading to 0
    message gyro_data(yaw_rate : Int16, gyro_heading : Int16, yaw_rate_change : Int16); // PID data grom the gyro   
}

thing fragment AnalogGyro includes AnalogGyroMsg, AnalogInputMsgs
{
    provided port Gyro {
        receives callibrate_gyro, reset_heading
        sends gyro_ready, gyro_data
    }
    
    required port PeriodicAnalogInput
    {
        receives analog_input_value  
    }
    
    statechart AnalogGyroImpl init Idle {
    	
    	readonly property calibration_samples : UInt16 = 300
    	property zero : UInt16  = 5407 // 1,65V (for adc 5V * 16)
    	property integral : Long  = 0 
    	property previous : UInt16  = 0 
    	
    	internal event Gyro?reset_heading
    	action integral = 0
    	
    	state Idle {
    		transition -> Callibrate event Gyro?callibrate_gyro
    	}
    	
    	state Callibrate {
    		
    		property sum : Long
    		property count : UInt16
    		
    		on entry do 
    			sum = 0
    			count = 0
    		end
    		
    		internal event m : PeriodicAnalogInput?analog_input_value
    		guard count < calibration_samples
    		action do
    			count = count + 1
    			sum = sum + (m.value * 16)
    		end
    		
    		transition -> Running event m : PeriodicAnalogInput?analog_input_value
    		guard count == calibration_samples
    		action zero = (sum + calibration_samples/2) / calibration_samples
    		
    	}
    	
    	state Running {
        
            on entry Gyro!gyro_ready()
    		
    		transition -> Callibrate event Gyro?callibrate_gyro
    		
    		internal event m : PeriodicAnalogInput?analog_input_value
    		action do
    			var v : Int16 = m.value * 16
    			v = zero - v
    			integral = integral + v
    			v = (v * 10) / 108
    			// v in deg/s
    			// i in x0.1 deg
    			// d in x100 deg/s/s
    			Gyro!gyro_data(v, integral/108, v - previous)
    			previous = v
    		end
    	
    	}
    }
}