//*
// Fabien Fleurey - 22/08/2011
// Electronic bricks library.
//
// This file provides an interface with the sound sensor. 
//*

import "../../thingml.thingml"
import "../io/analog_input.thingml"

thing fragment SoundSensorMsgs 
{
	message read_sound ();
	message sound_value (val : UInt16);
}

thing SoundSensor includes SoundSensorMsgs, AnalogInputMsgs
{
    readonly property sample_rate : UInt8 = 100
    property counter : UInt8 = 0
    property max_value : UInt16 = 0
    
	provided port SoundSensor 
    {
		receives read_sound
		sends sound_value
	}

    required port AnalogInput
    {
        receives analog_input_value
        sends read_analog_input    
    }
    
    statechart SoundSensorImpl init Running 
    {    
        internal event m : AnalogInput?analog_input_value
        guard counter < sample_rate
    	action do
            if (m.value > max_value) max_value = m.value
            counter = counter + 1
            end 
        	
        state Running 
        {
            internal event m : AnalogInput?analog_input_value
            guard counter == sample_rate or counter > sample_rate
    	    action do
                SoundSensor!sound_value (max_value)
                counter = 0
                max_value = 0
            end
            
        	transition force_reading -> Read 
            event SoundSensor?read_sound
        	action AnalogInput!read_analog_input ()
        }
        
        state Read
        {
            transition read -> Running 
            event m : AnalogInput?analog_input_value
    	    action SoundSensor!sound_value (max_value)
        }     
    }
}