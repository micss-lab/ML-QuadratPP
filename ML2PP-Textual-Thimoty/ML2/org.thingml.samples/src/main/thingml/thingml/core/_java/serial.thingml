/* ThingML Framework */

import "../comm.thingml"

object JavaSerial
@java_type "org.thingml.comm.rxtx.Serial4ThingML";

thing SerialJava includes IOByteArray
@pim "IOStream"
@platform "java"
@java_interface "org.thingml.comm.rxtx.SerialObserver"
@thingml_maven_dep "org.thingml.utils"
{
    readonly property serialPort : String = "COM4"
    property serial : JavaSerial 
        
	function receive(byte : Byte[18]) 
    @override "true"
    do
        //DEBUG
        print("receiving from serial port...")
        
        'System.out.print("[");
        for(byte b :' & byte & ') {
            System.out.print("- " + b + " -");
        }
        System.out.println("]");'
         
        IOStream!receive_bytes(byte)
        
        print("")
    end
    
    function initSerial() do 
        serial = 'new org.thingml.comm.rxtx.Serial4ThingML(' & serialPort & ', this)'  
    end
    
    function killSerial() do
        '' & serial & '.close();'
    end
        

    statechart behavior init default {
        on entry do
            initSerial()    
            print("Serial port ready!")    
        end
        
        on exit do
            killSerial()
            print("Serial port killed, RIP!")
        end
        
        state default {
            on entry do
                print("Serial port ready indeed!")
            end
            
            internal event wb : IOStream?write_bytes
            action do
               
                //DEBUG
                /*'for(byte b :' & wb.b & ') {'
                print("  serial will write: " + 'b')
                '}'*/
               
                '' & serial '.sendData(' & wb.b & ');'
            end
        }    
    }    
}

/*configuration TestJavaSerial {
    instance serial : SerialJava
}*/
