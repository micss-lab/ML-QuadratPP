import "../../datatypes.thingml"
import "../timer.thingml"
import "clock.thingml"

/*****************************************************************************
 * Definition of the built-in things and messages
 *****************************************************************************/

thing TimerLinux includes Timer, ClockMsgs 
@pim "Timer"
@platform "linux"
{

	required port clock { receives clock_tick }
	
	//To use timer in millisecond, set "millisecond" to true and "period" to the period of the clock
	readonly property millisecond : Boolean = false
	readonly property period : Integer = 100
	
	statechart ClockTimerImpl init Idle {
		
		property remaining : Integer = 0
		
		state Idle {
			transition -> Counting event m : timer?timer_start action remaining = m.delay 
		}
		
		state Counting {
			transition -> Idle event timer?timer_cancel
			transition -> Idle event clock?clock_tick guard remaining == 0 action timer!timer_timeout()
			internal event clock?clock_tick guard remaining > 0 action do 
				if (not millisecond) remaining = remaining - 1
				if (millisecond) remaining = remaining - period
			end 
			
		}
	
	}

}

configuration TimerLinuxCFG {
	instance clock : ClockLinux
	set clock.period = 1000
	instance timer : TimerLinux
	connector timer.clock => clock.signal
}

/*configuration TestTimerLinux 
  @debug "true"
  @debug_fifo "true"
  @debug_message_send ".*"
  @debug_message_receive ".*"
{    
    instance clock : ClockLinux
	set clock.period = 1
	instance timer : TimerLinux
	connector timer.clock => clock.signal

    instance client : SimpleTimerClient
    connector client.timer => timer.timer    
}*/
