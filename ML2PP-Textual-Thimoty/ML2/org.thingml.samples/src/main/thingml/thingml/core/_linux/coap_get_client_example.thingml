import "coap/coap_get_client.thingml"
import "clock.thingml"


thing COAPClientPIM includes COAPClientMsg, ClockMsgs {



	required port coapport {
		sends get, shutdown, initialize
		receives error_occured
	}
	
	required port synccaopport @sync_send "true" {
		receives response
	}
	
	required port signal {
        receives clock_tick
    }
    
    statechart behavior init Start {
    	
    	state Start {
    		
    		internal event signal?clock_tick
    		action coapport!get()
    		
    		internal event synccaopport?response
    		action do
    			print "COAPClientPIM : new message received... \n"
    		end
    		
    		internal event coapport?error_occured
    		action do
    			print "COAPClientPIM : error occured... \n"
    		end
    	}
    	
    }	
}


configuration COAPClientGetExample
  @output_folder "/home/tmp/"
  @debug "true"
  @debug_fifo "true"
  @debug_message_send ".*"
  @debug_message_receive ".*"
  @add_c_libraries "tmlcaopclient smcp"
{
	instance coapclpsm : COAPClientGetPSM
		set coapclpsm.server_url = "coap://localhost:5683/hello-world"
		set coapclpsm.server_port = 5683

	instance coapclpim : COAPClientPIM

    instance clock : ClockLinux
    	set clock.period = 5000
    	
    connector coapclpim.coapport => coapclpsm.coapport
    connector coapclpim.synccaopport => coapclpsm.synccaopport
    connector coapclpim.signal => clock.signal
}
