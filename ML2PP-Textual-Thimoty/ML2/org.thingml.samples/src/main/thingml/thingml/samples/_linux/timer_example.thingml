import "../../core/_linux/timer.thingml"

thing LinuxTimerTestApp includes TimerMsgs {

	required port timer1
    {
		receives timer_timeout
		sends timer_start, timer_cancel
	}
	
	required port timer2
    {
		receives timer_timeout
		sends timer_start, timer_cancel
	}
	
	statechart 	LinuxTimerTestAppImpl init T1 {
		
		state T1 {
			on entry timer1!timer_start(10) // 1 second with a 100ms clock
			transition -> T2 event timer1?timer_timeout
			action print "Timeout t1\n"
		}
		
		state T2 {
			on entry timer2!timer_start(20) // 2 second with a 100ms clock
			transition -> T1 event timer2?timer_timeout
			action print "Timeout t2\n"
		}

	}
}

configuration LinuxTimerTest 
//  @output_folder "/home/franck/thingml_out/timer_example"
  @debug "false"
  @debug_fifo "true"
  @debug_message_send ".*"
  @debug_message_receive ".*"
{
	// Create a clock with a 100ms period
	instance c : ClockLinux 
	set c.period = 100
	
	// Create two timer from the clock
	instance t1 : TimerLinux
	connector t1.clock => c.signal
	
	instance t2 : TimerLinux
	connector t2.clock => c.signal
	
	// Create and connect the test app
	instance app : LinuxTimerTestApp
	connector app.timer1 => t1.timer
	connector app.timer2 => t2.timer
}